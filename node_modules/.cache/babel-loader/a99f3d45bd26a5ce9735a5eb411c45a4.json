{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MY-NAME\\\\Desktop\\\\myWork\\\\covid19-ly-map\\\\src\\\\components\\\\Chart\\\\Chart.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"../../api\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport styles from \"./Chart.module.css\";\n\nconst Chart = () => {\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const fetchTheAPI = async () => {\n      setDailyData((await fetchDailyData()));\n    };\n\n    fetchTheAPI();\n  });\n  const lineChart = dailyData !== undefined ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(random => '-'),\n      datasets: [{\n        data: dailyData.map(({\n          TotalConfirmed\n        }) => TotalConfirmed),\n        label: \"المصابين\",\n        borderColor: \"#e74c3c\",\n        fill: true\n      }, {\n        data: dailyData.map(({\n          TotalDeaths\n        }) => TotalDeaths),\n        label: \"الوفيات\",\n        borderColor: \"#34495e\",\n        fill: true\n      }, {\n        data: dailyData.map(({\n          TotalRecovered\n        }) => TotalRecovered),\n        label: \"المتعافين\",\n        borderColor: \"#2ecc71\",\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \" Error\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 10\n    }\n  }, lineChart);\n};\n\nexport default Chart;","map":{"version":3,"sources":["C:/Users/MY-NAME/Desktop/myWork/covid19-ly-map/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Chart","dailyData","setDailyData","fetchTheAPI","lineChart","undefined","labels","map","random","datasets","data","TotalConfirmed","label","borderColor","fill","TotalDeaths","TotalRecovered","container"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,WAAW,GAAG,YAAY;AAC9BD,MAAAA,YAAY,EAAC,MAAMN,cAAc,EAArB,EAAZ;AACD,KAFD;;AAGAO,IAAAA,WAAW;AACZ,GALQ,CAAT;AAOA,QAAMC,SAAS,GACbH,SAAS,KAAKI,SAAd,gBACE,oBAAC,IAAD;AACE,IAAA,IAAI,EAAE;AACJC,MAAAA,MAAM,EAAEL,SAAS,CAACM,GAAV,CAAeC,MAAD,IAAY,GAA1B,CADJ;AAEJC,MAAAA,QAAQ,EAAE,CACR;AACEC,QAAAA,IAAI,EAAET,SAAS,CAACM,GAAV,CAAc,CAAC;AAACI,UAAAA;AAAD,SAAD,KAAuBA,cAArC,CADR;AAEEC,QAAAA,KAAK,EAAE,UAFT;AAGEC,QAAAA,WAAW,EAAE,SAHf;AAIEC,QAAAA,IAAI,EAAE;AAJR,OADQ,EAOR;AACEJ,QAAAA,IAAI,EAAET,SAAS,CAACM,GAAV,CAAc,CAAC;AAAEQ,UAAAA;AAAF,SAAD,KAAqBA,WAAnC,CADR;AAEEH,QAAAA,KAAK,EAAE,SAFT;AAGEC,QAAAA,WAAW,EAAE,SAHf;AAIEC,QAAAA,IAAI,EAAE;AAJR,OAPQ,EAaR;AACEJ,QAAAA,IAAI,EAAET,SAAS,CAACM,GAAV,CAAc,CAAC;AAAES,UAAAA;AAAF,SAAD,KAAwBA,cAAtC,CADR;AAEEJ,QAAAA,KAAK,EAAE,WAFT;AAGEC,QAAAA,WAAW,EAAE,SAHf;AAIEC,QAAAA,IAAI,EAAE;AAJR,OAbQ;AAFN,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,gBA2BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA5BJ;AA8BA,sBAAO;AAAK,IAAA,SAAS,EAAEf,MAAM,CAACkB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCb,SAAnC,CAAP;AACD,CAxCD;;AA0CA,eAAeJ,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyData } from \"../../api\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport styles from \"./Chart.module.css\";\r\n\r\nconst Chart = () => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n  useEffect(() => {\r\n    const fetchTheAPI = async () => {\r\n      setDailyData(await fetchDailyData());\r\n    };\r\n    fetchTheAPI();\r\n  });\r\n\r\n  const lineChart =\r\n    dailyData !== undefined ? (\r\n      <Line\r\n        data={{\r\n          labels: dailyData.map((random) => '-'),\r\n          datasets: [\r\n            {\r\n              data: dailyData.map(({TotalConfirmed}) =>  TotalConfirmed),\r\n              label: \"المصابين\",\r\n              borderColor: \"#e74c3c\",\r\n              fill: true,\r\n            },\r\n            {\r\n              data: dailyData.map(({ TotalDeaths }) => TotalDeaths),\r\n              label: \"الوفيات\",\r\n              borderColor: \"#34495e\",\r\n              fill: true,\r\n            },\r\n            {\r\n              data: dailyData.map(({ TotalRecovered }) => TotalRecovered),\r\n              label: \"المتعافين\",\r\n              borderColor: \"#2ecc71\",\r\n              fill: true\r\n            }\r\n          ],\r\n        }}\r\n      />\r\n    ) : (\r\n      <div> Error</div>\r\n    );\r\n  return <div className={styles.container}>{lineChart}</div>;\r\n};\r\n\r\nexport default Chart;\r\n"]},"metadata":{},"sourceType":"module"}